name: Game

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      CARGO_UNSTABLE_SPARSE_REGISTRY: "true"
    steps:
    - uses: actions/checkout@v3

    - name: Run sccache-cache
      if: ${{ !github.event.act }}
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Download ml data
      run: |
        curl "https://2143.me/f/sBTl.rten" -o text-detection.rten
        curl "http://2143.me/f/JmpB.rten" -o text-recognition.rten
        echo ${{ secrets.tarkov_key }} >> market_api_key.txt

    - run: cargo build --release

    - name: Upload Executable
      uses: actions/upload-artifact@v3
      with:
        name: windows-latest
        path: |
          target/release/tarkov_pricing_overlay.exe
          text-detection.rten
          text-recognition.rten
        retention-days: 2

  create_release:
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Move artifacts
        #mv windows-latest/* .
        #rm windows-latest
      run: |
        bash -c "mv windows-latest/* . || true"
        bash -c "rm -rf windows-latest || true"
        bash -c "mv ubuntu-latest/* . || true"
        bash -c "rm -rf ubuntu-latest || true"
        bash -c "chmod +x client server || true"

    - name: Create Zip
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        filename: 'release.zip'

    - name: Create Release
      id: create_release_real
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ github.run_number }}
        name: "Release ${{github.run_number}}"
        draft: false
        prerelease: false
        files: |
          release.zip

    #- name: Github Releases To Discord
      #uses: tsickert/discord-webhook@v5.4.0
      #with:
        #content: |
          #A new release has appeared: Run ${{github.run_number}} built for ${{ needs.setup.outputs.builds }}

          #> ${{ github.event.head_commit.message }}

          #${{ steps.create_release_real && steps.create_release_real.outputs.url || steps.create_release_draft.outputs.url }}
        #username: ROTS Release Bot
        #embed-title: Download v${{ github.run_number }}
        #embed-url: ${{ steps.create_release_real && steps.create_release_real.outputs.url || steps.create_release_draft.outputs.url }}
        #webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
